{"version":3,"sources":["firebase.js","contexts/AuthContext.js","pages/sign-up.js","pages/create.js","pages/home.js","pages/no-match.js","pages/post.js","pages/sign-in.js","App.js","serviceWorker.js","index.js"],"names":["require","firebaseCache","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","getFirebase","firebase","initializeApp","AuthContext","auth","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","SignUp","emailRef","useRef","passwordRef","passwordConfirmRef","useContext","error","setError","history","useHistory","e","a","preventDefault","current","push","message","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","labelStyles","display","marginBottom","inputStyles","width","height","lineHeight","verticalAlign","fontSize","padding","Create","title","setTitle","slug","setSlug","coverImage","setCoverImage","coverImageAlt","setCoverImageAlt","content","setContent","style","margin","htmlFor","onChange","target","textAlign","border","color","backgroundColor","borderRadius","onClick","date","now","Date","year","getFullYear","month","getMonth","day","getDate","formatted","pretty","toLocaleDateString","generateDate","newPost","dateFormatted","datePretty","database","child","set","then","Home","blogPosts","setBlogPosts","orderByChild","once","snapshot","posts","snapshotVal","val","newestFirst","reverse","map","blogPost","key","src","alt","dangerouslySetInnerHTML","__html","substring","NoMatch","Post","match","currentPost","setCurrentPost","params","SignIn","setEmail","setPassword","setUser","catch","console","alert","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.36bff1c1.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nrequire(\"firebase/auth\");\nrequire(\"firebase/database\");\n\nconst config = {\n  apiKey: \"AIzaSyC_QXxiHay3ceeSceSEbx0gCpAeKBIzgd4\",\n  authDomain: \"react-firebase-blog-291d4.firebaseapp.com\",\n  databaseURL: \"https://react-firebase-blog-291d4-default-rtdb.firebaseio.com\",\n  projectId: \"react-firebase-blog-291d4\",\n  storageBucket: \"react-firebase-blog-291d4.appspot.com\",\n  messagingSenderId: \"56496362352\",\n  appId: \"1:56496362352:web:9b87c50518de62df9975b5\"\n};\n\nlet firebaseCache;\n\n\nexport const getFirebase = () => {\n  if (firebaseCache) {\n    return firebaseCache;\n  }\n\n  firebase.initializeApp(config);\n  firebaseCache = firebase;\n  return firebase;\n};\nexport const auth = getFirebase().auth()\n\n","import React, { useContext, useState, useEffect } from \"react\"\nimport { getFirebase } from \"../firebase\"\n\nconst AuthContext = React.createContext()\n\nexport function useAuth() {\n    return useContext(AuthContext)\n}\n\nexport function AuthProvider({ children }) {\n    const [currentUser, setCurrentUser] = useState()\n    const [loading, setLoading] = useState(true)\n\n    function signup(email, password) {\n        return getFirebase().auth().createUserWithEmailAndPassword(email, password)\n    }\n\n    function login(email, password) {\n        return getFirebase().auth().signInWithEmailAndPassword(email, password)\n    }\n\n    function logout() {\n        return getFirebase().auth().signOut()\n    }\n\n    function resetPassword(email) {\n        return getFirebase().auth().sendPasswordResetEmail(email)\n    }\n\n    function updateEmail(email) {\n        return currentUser.updateEmail(email)\n    }\n\n    function updatePassword(password) {\n        return currentUser.updatePassword(password)\n    }\n\n    useEffect(() => {\n        const unsubscribe = getFirebase().auth().onAuthStateChanged(user => {\n            setCurrentUser(user)\n            setLoading(false)\n        })\n\n        return unsubscribe\n    }, [])\n\n    const value = {\n        currentUser,\n        login,\n        signup,\n        logout,\n        resetPassword,\n        updateEmail,\n        updatePassword\n    }\n\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    )\n}","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { useAuth } from \"../contexts/AuthContext\";\n\nexport default function SignUp() {\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const passwordConfirmRef = useRef()\n    const { signup } = useAuth()\n    const [error, setError] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n            return setError(\"Passwords do not match\")\n        }\n\n        try {\n            setError(\"\")\n            setLoading(true)\n            await signup(emailRef.current.value, passwordRef.current.value)\n            history.push(\"/\")\n        } catch (error) {\n            setError(error.message)\n\n        }\n\n        setLoading(false)\n    }\n\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\">Sign Up</h2>\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n                    <Form onSubmit={handleSubmit}>\n                        <Form.Group id=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control type=\"email\" ref={emailRef} required />\n                        </Form.Group>\n                        <Form.Group id=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\" ref={passwordRef} required />\n                        </Form.Group>\n\n                        <Form.Group id=\"password-confirm\">\n                            <Form.Label>Password Confirmation</Form.Label>\n                            <Form.Control type=\"password\" ref={passwordConfirmRef} required />\n                        </Form.Group>\n                        <Button disabled={loading} className=\"m-2 w-100\" type=\"submit\">\n                            Sign Up\n                        </Button>\n                    </Form>\n                </Card.Body>\n            </Card>\n            <div className=\"w-100 text-center mt-2\">\n                Already have an account? <Link to=\"/sign-in\">Log In</Link>\n            </div>\n        </>\n    )\n}","import React, { useState } from \"react\";\nimport { getFirebase } from \"../firebase\";\n \nconst labelStyles = {\n  display: \"block\",\n  marginBottom: 4\n};\n \nconst inputStyles = {\n  width: \"100%\",\n  height: \"2rem\",\n  lineHeight: \"2rem\",\n  verticalAlign: \"middle\",\n  fontSize: \"1rem\",\n  marginBottom: \"1.5rem\",\n  padding: \"0 0.25rem\"\n};\n \nconst generateDate = () => {\n  const now = new Date();\n  const options = { month: \"long\", day: \"numeric\", year: \"numeric\" };\n \n  const year = now.getFullYear();\n \n  let month = now.getMonth() + 1;\n  if (month < 10) {\n    month = `0${month}`; // prepend with a 0\n  }\n \n  let day = now.getDate();\n  if (day < 10) {\n    day = `0${day}`; // prepend with a 0\n  }\n \n  return {\n    formatted: `${year}-${month}-${day}`,             // used for sorting\n    pretty: now.toLocaleDateString(\"en-US\", options)  // used for displaying\n  };\n};\n\nconst Create = ( {history} ) => {\n  const [title, setTitle] = useState(\"\");\n  const [slug, setSlug] = useState(\"\");\n  const [coverImage, setCoverImage] = useState(\"\");\n  const [coverImageAlt, setCoverImageAlt] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n \n  const createPost = () => {\n  const date = generateDate();\n  const newPost = {\n    title,\n    dateFormatted: date.formatted,\n    datePretty: date.pretty,\n    slug,\n    coverImage,\n    coverImageAlt,\n    content\n  };\n  getFirebase()\n    .database()\n    .ref()\n    .child(`posts/${slug}`)\n    .set(newPost)\n    .then(() => history.push(`/`));\n};\n \n  return (\n    <>\n      <h1>Create a new post</h1>\n      <section style={{ margin: \"2rem 0\" }}>\n        <label style={labelStyles} htmlFor=\"title-field\">\n          Title\n        </label>\n        <input\n          style={inputStyles}\n          id=\"title-field\"\n          type=\"text\"\n          value={title}\n          onChange={({ target: { value } }) => {\n            setTitle(value);\n          }}\n        />\n \n        <label style={labelStyles} htmlFor=\"slug-field\">\n          Slug\n        </label>\n        <input\n          style={inputStyles}\n          id=\"slug-field\"\n          type=\"text\"\n          value={slug}\n          onChange={({ target: { value } }) => {\n            setSlug(value);\n          }}\n        />\n \n        <label style={labelStyles} htmlFor=\"cover-image-field\">\n          Cover image\n        </label>\n        <input\n          style={inputStyles}\n          id=\"cover-image-field\"\n          type=\"text\"\n          value={coverImage}\n          onChange={({ target: { value } }) => {\n            setCoverImage(value);\n          }}\n        />\n \n        <label style={labelStyles} htmlFor=\"cover-image-alt-field\">\n          Cover image alt\n        </label>\n        <input\n          style={inputStyles}\n          id=\"cover-image-alt-field\"\n          type=\"text\"\n          value={coverImageAlt}\n          onChange={({ target: { value } }) => {\n            setCoverImageAlt(value);\n          }}\n        />\n \n        <label style={labelStyles} htmlFor=\"content-field\">\n          Content\n        </label>\n        <textarea\n          style={{ ...inputStyles, height: 200, verticalAlign: \"top\" }}\n          id=\"content\"\n          type=\"text\"\n          value={content}\n          onChange={({ target: { value } }) => {\n            setContent(value);\n          }}\n        />\n        <div style={{ textAlign: \"right\" }}>\n          <button\n            style={{\n              border: \"none\",\n              color: \"#fff\",\n              backgroundColor: \"#039be5\",\n              borderRadius: \"4px\",\n              padding: \"8px 12px\",\n              fontSize: \"0.9rem\"\n            }}\n            onClick={createPost}\n          >\n            Create\n          </button>\n        </div>\n      </section>\n    </>\n  );\n};\n \nexport default Create;","import React, { useState, useEffect } from \"react\";\nimport Create from \"../pages/create\";\nimport { Link } from \"react-router-dom\";\nimport { getFirebase } from \"../firebase\";\n\n\nconst Home = () => {\n  const [loading, setLoading] = useState(true);\n  const [blogPosts, setBlogPosts] = useState([]);\n\n  useEffect(() => {\n    getFirebase()\n      .database()\n      .ref(\"/posts\")\n      .orderByChild(\"dateFormatted\")\n      .once(\"value\")\n      .then(snapshot => {\n        let posts = [];\n        const snapshotVal = snapshot.val();\n        for (let slug in snapshotVal) {\n          posts.push(snapshotVal[slug]);\n        }\n\n        const newestFirst = posts.reverse();\n        setBlogPosts(newestFirst);\n        setLoading(false);\n      });\n\n  }, [])\n\n\n  if (loading) {\n    return <h1>Loading...</h1>;\n  }\n\n  return (\n    <>\n      <h1>Blog posts</h1>\n\n      <Link to=\"/create\" style={{\n        border: \"none\",\n        color: \"#fff\",\n        backgroundColor: \"#039be5\",\n        borderRadius: \"4px\",\n        padding: \"8px 12px\",\n        fontSize: \"0.9rem\"\n      }}>Create Post</Link>\n\n      {blogPosts.map(blogPost => (\n        <section key={blogPost.slug} className=\"card\">\n          <img src={blogPost.coverImage} alt={blogPost.coverImageAlt} />\n          <div className=\"card-content\">\n            <h2>\n              {blogPost.title} &mdash;{\" \"}\n              <span style={{ color: \"#5e5e5e\" }}>{blogPost.datePretty}</span>\n            </h2>\n            <p\n              dangerouslySetInnerHTML={{\n                __html: `${blogPost.content.substring(0, 200)}...`\n              }}\n            ></p>\n            <Link to={`/${blogPost.slug}`}>Continue reading...</Link>\n          </div>\n        </section>\n      ))}\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NoMatch = () => (\n  <>\n    <h1>Hmmm... can't seem to find that page.</h1>\n    <Link to=\"/\">Take me home</Link>\n  </>\n);\n\nexport default NoMatch;\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { getFirebase } from \"../firebase\";\nconst Post = ({ match }) => {\n  const [loading, setLoading] = useState(true);\n  const [currentPost, setCurrentPost] = useState();\n\n  useEffect(() => {\n    const slug = match.params.slug;\n    getFirebase()\n      .database()\n      .ref()\n      .child(`/posts/${slug}`)\n      .once(\"value\")\n      .then(snapshot => {\n        if (snapshot.val()) {\n          setCurrentPost(snapshot.val());\n        }\n        setLoading(false);\n      });\n  }, [match])\n\n\n  if (loading) {\n    return <h1>Loading...</h1>;\n  }\n\n  const postDoesNotExist = !currentPost;\n  if (postDoesNotExist) {\n    return <Redirect to=\"/404\" />;\n  }\n\n\n\n  return (\n    <>\n      <img src={currentPost.coverImage} alt={currentPost.coverImageAlt} />\n      <h1>{currentPost.title}</h1>\n      <em>{currentPost.datePretty}</em>\n      <p dangerouslySetInnerHTML={{ __html: currentPost.content }}></p>\n    </>\n  );\n};\n\nexport default Post;\n","import React, { useState } from \"react\";\nimport { getFirebase } from \"../firebase\";\n\nconst labelStyles = {\n    display: \"block\",\n    marginBottom: 4\n};\n\nconst inputStyles = {\n    width: \"100%\",\n    height: \"2rem\",\n    lineHeight: \"2rem\",\n    verticalAlign: \"middle\",\n    fontSize: \"1rem\",\n    marginBottom: \"1.5rem\",\n    padding: \"0 0.25rem\"\n};\n\nconst SignIn = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [user, setUser] = useState();\n\n    getFirebase().auth().onAuthStateChanged((user) => {\n        if (user) {\n            setUser(user);\n        }\n    });\n\n\n    const logIn = () => {\n        getFirebase().auth().signInWithEmailAndPassword(email, password)\n            .catch((error) => {\n                console.error(error);\n                alert(error.message);\n            });\n    };\n\n    const signOut = () => {\n        getFirebase()\n            .auth()\n            .signOut()\n            .then(() => {\n                setUser();\n            })\n            .catch(error => {\n                console.error(error);\n                alert(error.message);\n            });\n    };\n\n\n    if (user) {\n        return (\n            <>\n                <h1>{`Logged in as: ${user.email}`}</h1>\n                <button style={{\n                    border: \"none\",\n                    color: \"#fff\",\n                    backgroundColor: \"#039be5\",\n                    borderRadius: \"4px\",\n                    padding: \"8px 12px\",\n                    fontSize: \"0.9rem\"\n                }}\n                    onClick={signOut}> Sign Out</button>\n            </>\n        );\n    }\n\n    return (\n        <>\n            <h1>Sign in</h1>\n            <section style={{ margin: \"2rem 0\" }}>\n                <label style={labelStyles} htmlFor=\"email-field\">Email</label>\n                <input\n                    id=\"email-field\"\n                    style={inputStyles}\n                    type=\"email\"\n                    value={email}\n                    onChange={({ target: { value } }) => {\n                        setEmail(value);\n                    }}\n                />\n\n                <label style={labelStyles} htmlFor=\"password-field\">Password</label>\n                <input\n                    id=\"password-field\"\n                    style={inputStyles}\n                    type=\"password\"\n                    value={password}\n                    onChange={({ target: { value } }) => {\n                        setPassword(value);\n                    }}\n                />\n\n                <div style={{ textAlign: \"right\" }}>\n                    <button\n                        style={{\n                            border: \"none\",\n                            color: \"#fff\",\n                            backgroundColor: \"#039be5\",\n                            borderRadius: \"4px\",\n                            padding: \"8px 12px\",\n                            fontSize: \"0.9rem\"\n                        }}\n                        onClick={logIn}\n                    >\n                        Log In\n                    </button>\n                </div>\n            </section>\n        </>\n    );\n};\n\nexport default SignIn;","import React from \"react\";\nimport SignUp from \"./pages/sign-up\";\n\nimport { AuthProvider } from \"../src/contexts/AuthContext\";\n\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport Home from \"./pages/home\";\nimport NoMatch from \"./pages/no-match\";\nimport Post from \"./pages/post\";\nimport Create from \"./pages/create\";\nimport SignIn from \"./pages/sign-in\";\n\nfunction App() {\n  return (\n    <Router>\n      <nav>\n        <Link to=\"/\">\n          <h2>Firebase Blog</h2>\n        </Link>\n      </nav>\n      <AuthProvider>\n\n        <main>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/create\" component={Create} />\n            <Route path=\"/sign-up\" component={SignUp} />\n            <Route path=\"/sign-in\" component={SignIn} />\n            <Route path=\"/404\" component={NoMatch} />\n            <Route path=\"/:slug\" component={Post} />\n          </Switch>\n        </main>\n      </AuthProvider>\n\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}